@model Hasslefree.Web.Models.Rentals.CompleteRental

<div class="clearfix"></div>
<div id="content">
	<div class="container">
		<div class="row justify-content-md-center">
			<div class="col col-lg-12 col-xl-12">
				<div class="row">

					<div class="col-md-12 col-lg-12 col-xl-12">
						<div class="page-header bordered">
							<h1>Complete Rental <small>Complete your rental listing</small></h1>
						</div>
						<form action="/account/rental/complete-rental" method="post" id="registration-form">
							@Html.HiddenFor(m => m.RentalId)
							@Html.HiddenFor(m => m.RentalGuid)
							@Html.HiddenFor(m => m.RentalLandlordId)
							@{
								if (ViewData.ModelState.Any(m => m.Value.Errors.Count > 0))
								{
									<div class="alert alert-danger" role="alert">
										@Html.ValidationSummary(false)
									</div>
								}
							}
							@Html.AntiForgeryToken()

							<h3 class="subheadline">Your Information</h3>
							<div class="form-group">
								<label for="Gender">Gender</label>
								<select name="Gender" id="Gender" class="form-control">
									@foreach (var gender in ViewBag.Genders)
									{
										<option value="@gender" @(gender == Model.Gender.ToString() ? "selected" : "")>@gender</option>
									}
								</select>
							</div>
							<div class="form-group">
								<label for="Title">Title</label>
								<select name="Title" id="Title" class="form-control">
									@foreach (var title in ViewBag.Titles)
									{
										<option value="@title" @(title == Model.Title ? "selected" : "")>@title</option>
									}
								</select>
							</div>
							<div class="form-group">
								<label for="Name">Name</label>
								@Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Name" })
							</div>
							<div class="form-group">
								<label for="Surname">Surname</label>
								@Html.TextBoxFor(m => m.Surname, new { @class = "form-control", @placeholder = "Surname" })
							</div>
							<div class="form-group">
								<label for="IdNumber">ID Number</label>
								@Html.TextBoxFor(m => m.IdNumber, new { @class = "form-control", @placeholder = "ID Number" })
							</div>
							<div class="form-group">
								<label for="Mobile">Cellphone Number</label>
								@Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", @placeholder = "Cellphone Number" })
							</div>
							<div class="form-group">
								<label for="Mobile">VAT Registration Number</label>
								@Html.TextBoxFor(m => m.VatNumber, new { @class = "form-control", @placeholder = "VAT Registration Number" })
							</div>
							<div class="form-group">
								<label for="IncomeTaxNumber">Income Tax Number</label>
								@Html.TextBoxFor(m => m.IncomeTaxNumber, new { @class = "form-control", @placeholder = "Income Tax Number" })
							</div>
							<h3 class="subheadline">Login Information</h3>
							<div class="form-group">
								<label for="Email">Email</label>
								@Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
							</div>
							<div class="form-group">
								<label for="Password">Password</label>
								@Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
							</div>
							<div class="form-group">
								<label for="ConfirmPassword">Confirm Password</label>
								@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password" })
							</div>
							<h3 class="subheadline">Listing Information</h3>
							<div class="form-group">
								<label for="Premises">The Premises</label>
								@Html.TextBoxFor(m => m.Premises, new { @class = "form-control", @placeholder = "The Premises" })
							</div>
							<div class="form-group">
								<label for="StandErf">Stand/Erf</label>
								@Html.TextBoxFor(m => m.StandErf, new { @class = "form-control", @placeholder = "Stand/Erf" })
							</div>
							<div class="form-group">
								<label for="Township">Township</label>
								@Html.TextBoxFor(m => m.Township, new { @class = "form-control", @placeholder = "Township" })
							</div>
							<div class="form-group">
								<label for="Address">Being (street address)</label>
								@Html.TextBoxFor(m => m.Address, new { @class = "form-control", @placeholder = "Being (street address)" })
							</div>
							<h3 class="subheadline">Rental Information</h3>
							<div class="form-group">
								<label for="MonthlyRental">Monthly Rental</label>
								@Html.TextBoxFor(m => m.MonthlyRental, new { @class = "form-control", @placeholder = "Monthly Rental (R)" })
							</div>
							<div class="form-group">
								<label for="Deposit">Deposit</label>
								@Html.TextBoxFor(m => m.Deposit, new { @class = "form-control", @placeholder = "Deposit" })
							</div>
							<div class="form-group">
								<label for="PostalAddress1">Rental Payment Date</label>
								@Html.TextBoxFor(m => m.RentalPaymentDate, new { @class = "form-control", @placeholder = "Rental Payment Date" })
							</div>
							<div class="form-group">
								<label for="PostalAddress2">Deposit Payment Date</label>
								@Html.TextBoxFor(m => m.DepositPaymentDate, new { @class = "form-control", @placeholder = "Deposit Payment Date" })
							</div>
							<h3 class="subheadline">Commission</h3>
							<div class="form-group">
								<label for="Procurement1Percentage">Procurement Commission (excluding VAT) %</label>
								@Html.TextBoxFor(m => m.Procurement1Percentage, new { @class = "form-control", @placeholder = "Procurement Commission (excluding VAT) %" })
							</div>
							<div class="form-group">
								<label for="Procurement1Amount">Procurement Commission (excluding VAT) Amount</label>
								@Html.TextBoxFor(m => m.Procurement1Amount, new { @class = "form-control", @placeholder = "Procurement Commission (excluding VAT) Amount" })
							</div>
							<div class="form-group">
								<label for="Procurement2Percentage">Second Year's Procurement Commission (excluding VAT) %</label>
								@Html.TextBoxFor(m => m.Procurement2Percentage, new { @class = "form-control", placeholder = "Second Year's Procurement Commission (excluding VAT) %" })
							</div>
							<div class="form-group">
								<label for="Procurement2Amount">Second Year's Procurement Commission (excluding VAT) Amount</label>
								@Html.TextBoxFor(m => m.Procurement2Amount, new { @class = "form-control", placeholder = "Second Year's Procurement Commission (excluding VAT) Amount" })
							</div>
							<div class="form-group">
								<label for="Procurement3Percentage">Additional Year's Procurement Commission (excluding VAT) %</label>
								@Html.TextBoxFor(m => m.Procurement3Percentage, new { @class = "form-control", @placeholder = "Additional Year's Procurement Commission (excluding VAT) %" })
							</div>
							<div class="form-group">
								<label for="Procurement3Amount">Additional Year's Procurement Commission (excluding VAT) Amount</label>
								@Html.TextBoxFor(m => m.Procurement3Amount, new { @class = "form-control", @placeholder = "Additional Year's Procurement Commission (excluding VAT) Amount" })
							</div>
							<div class="form-group">
								<label for="ManagementPercentage">Management Commission (excluding VAT) %</label>
								@Html.TextBoxFor(m => m.ManagementPercentage, new { @class = "form-control", @placeholder = "Management Commission (excluding VAT) %" })
							</div>
							<div class="form-group">
								<label for="ManagementAmount">Management Commission (excluding VAT) Amount</label>
								@Html.TextBoxFor(m => m.ManagementAmount, new { @class = "form-control", @placeholder = "Management Commission (excluding VAT) Amount" })
							</div>
							<div class="form-group">
								<label for="SalePercentage">Sale Commission (excluding VAT) %</label>
								@Html.TextBoxFor(m => m.SalePercentage, new { @class = "form-control", @placeholder = "Sale Commission (excluding VAT) %" })
							</div>
							<div class="form-group">
								<label for="SaleAmount">Sale Commission (excluding VAT) Amount</label>
								@Html.TextBoxFor(m => m.SaleAmount, new { @class = "form-control", @placeholder = "Sale Commission (excluding VAT) Amount" })
							</div>
							<h3 class="subheadline">Banking Details</h3>
							<div class="form-group">
								<label for="AccountHolder">Account Holder</label>
								@Html.TextBoxFor(m => m.AccountHolder, new { @class = "form-control", @placeholder = "Account Holder" })
							</div>
							<div class="form-group">
								<label for="Bank">Bank</label>
								@Html.TextBoxFor(m => m.Bank, new { @class = "form-control", @placeholder = "Bank" })
							</div>
							<div class="form-group">
								<label for="Branch">Branch</label>
								@Html.TextBoxFor(m => m.Branch, new { @class = "form-control", @placeholder = "Branch" })
							</div>
							<div class="form-group">
								<label for="BranchCode">Branch Code</label>
								@Html.TextBoxFor(m => m.BranchCode, new { @class = "form-control", @placeholder = "Branch Code" })
							</div>
							<div class="form-group">
								<label for="AccountNumber">Account Number</label>
								@Html.TextBoxFor(m => m.AccountNumber, new { @class = "form-control", @placeholder = "Account Number" })
							</div>
							<div class="form-group">
								<label for="AccountNumber">Reference</label>
								@Html.TextBoxFor(m => m.BankReference, new { @class = "form-control", @placeholder = "Reference" })
							</div>

							<h3 class="subheadline">Agent Duties</h3>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="procurement" />
									<label for="procurement">For the purpose of finding a Tenant only (Procurement)?</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="management" />
									<label for="management">For the purpose of managing any Tenant on the Premises (Management)?</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="negotiating" />
									<label for="negotiating">
										Negotiating the Lease Agreement with potential Tenants and ensuring that all suspensive and resolutive legal formalities pertaining to the Lease Agreement are complied with?
									</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="informing" />
									<label for="informing">
										Informing the Tenant of all rights and duties in terms of the Lease Agreement including the Tenant’s duties to pay the Rental on time and to look after the Premises
									</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="incoming-snaglist" />
									<label for="incoming-snaglist">
										Initiating and performing the incoming snag list or initial inspection of the Premises and recording all existing damages or defects to the Premises
									</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="outgoing-snaglist" />
									<label for="outgoing-snaglist">
										Initiating and performing the outgoing snag list or exit inspection of the Premises and recording all damages and defects to the Premises
									</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="explaining" />
									<label for="explaining">
										Explaining to the Tenant that the Tenant may be asked by the Agent to pay a portion of the Rental directly to the Agent if the Landlord does not pay the Agent a portion or the full amount of any Commission due to the Agent
									</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="paying-landlord" />
									<label for="paying-landlord">
										Paying the Landlord to his Nominated Bank Account as set out in item 1.8 by the date referred to in item 1.4, all Rental and ancillary expenses payable by the Tenant, as well as VAT thereon
									</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="contact-landlord" />
									<label for="contact-landlord">
										The Agent will prior to instructing the attorneys contact the Landlord and inform him of the legal situation
									</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="provide-landlord" />
									<label for="provide-landlord">
										The Agent will prior to instructing the attorneys provide the Landlord with the contact details of the preferred attorney
									</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="ask-landlord-consent" />
									<label for="ask-landlord-consent">
										The Agent will prior to instructing the attorneys ask the Landlord for consent to refer the matter to the attorney in question
									</label>
								</div>
							</div>
							<div class="form-group">
								<label>The Agent shall procure the Deposit from the:</label>
								<div>
									<div class="radio radio-inline">
										<input type="radio" name="DepositProcurement" id="procure-deposit-landlord" value="Landlord">
										<label for="DepositProcurement">Landlord</label>
									</div>
									<div class="radio radio-inline">
										<input type="radio" name="DepositProcurement" id="procure-deposit-previous-rental-agent" value="PreviousRentalAgent">
										<label for="DepositProcurement">Previous Rental Agent</label>
									</div>
									<div class="radio radio-inline">
										<input type="radio" name="DepositProcurement" id="procure-deposit-other" value="Other">
										<label for="DepositProcurement">Another third party (specify)</label>
									</div>
									<label for="ProcureDepositOther">Specify</label>
									@Html.TextAreaFor(m => m.ProcureDepositOther, new { @class = "form-control", @placeholder = "Specify" })
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="transfer-deposit" />
									<label for="transfer-deposit">
										The Agent shall after procuring the Deposit transfer the Deposit to its Trust Account
									</label>
								</div>
							</div>

							<h3 class="subheadline">Other Conditions</h3>
							<div class="form-group">
								<label for="SpecificRequirements">Specific Requirements</label>
								@Html.TextAreaFor(m => m.SpecificRequirements, new { @class = "form-control", @placeholder = "Specific Requirements" })
							</div>
							<div class="form-group">
								<label for="SpecialConditions">Special Conditions</label>
								@Html.TextAreaFor(m => m.SpecialConditions, new { @class = "form-control", @placeholder = "Special Conditions" })
							</div>

							<hr>
							<div class="form-group action">
								<button type="submit" class="btn btn-lg btn-primary" data-loading-text="<i class='fa fa-spinner fa-spin'></i> Saving...">Continue</button>
							</div>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section PageScripts{

	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC6QjJKeDXiflZEJug5ldkvAzzrLkZYoAM&libraries=places&callback=initMap" async></script>

	<script type="text/javascript">

		function initMap() {
			const address = document.getElementById("Address");
			const addressOptions = {
				componentRestrictions: { country: "za" },
				types: ["address"]
			};
			const addressAutocomplete = new google.maps.places.Autocomplete(address, addressOptions);
			addressAutocomplete.addListener("place_changed", () => {
				const place = addressAutocomplete.getPlace();
				console.log(place);
				$('#Address').val(place.formatted_address);
			});
		}

		$(document).ready(function () {

			$('#RentalPaymentDate').datetimepicker({
				timepicker: false,
				format: 'Y/m/d'
			});

			$('#DepositPaymentDate').datetimepicker({
				timepicker: false,
				format: 'Y/m/d'
			});

		})

		$('#registration-form').on('submit', function () {

			$('#registration-form').append('<input type="hidden" name="Procurement" value="' + $('#procurement').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="Management" value="' + $('#management').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="Negotiating" value="' + $('#negotiating').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="Informing" value="' + $('#informing').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="IncomingSnaglist" value="' + $('#incoming-snaglist').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="OutgoingSnaglist" value="' + $('#outgoing-snaglist').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="Explaining" value="' + $('#explaining').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="PayingLandlord" value="' + $('#paying-landlord').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="InstructingAttorneys" value="' + $('#instruct-landlord').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="ContactLandlord" value="' + $('#contact-landlord').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="ProvideLandlord" value="' + $('#provide-landlord').is(':checked') + '" />');
			$('#registration-form').append('<input type="hidden" name="AskLandlordConsent" value="' + $('#ask-landlord-consent').is(':checked') + '" />');

			$('#registration-form').append('<input type="hidden" name="AskLandlordConsent" value="' + $('#ask-landlord-consent').is(':checked') + '" />');

			$('#registration-form').append('<input type="hidden" name="TransferDeposit" value="' + $('#transfer-deposit').is(':checked') + '" />');

		});

		$('#Race').on('change', function () {
			var selected = $(this).val();
			if (selected == 'Other') {
				$('#race-other').val('');
				$('#race-other-container').show('fast');
				$('#Race').removeAttr('name');
				$('#race-other').attr('name', 'Race');
			}
			else {
				$('#race-other').val('');
				$('#race-other-container').hide('fast');
				$('#race-other').removeAttr('name');
				$('#Race').attr('name', 'Race');
			}
		});

		$('#nationality').on('change', function () {
			var checked = $(this).is(':checked');
			if (!checked) {
				$('#nationality-other').val('');
				$('#nationality-other-container').show('fast');
			}
			else {
				$('#nationality-other').val('South African');
				$('#nationality-other-container').hide('fast');
			}
		});

		$('#ffc').on('change', function () {
			var checked = $(this).is(':checked');
			if (checked) {
				$('#FfcNumber').val('');
				$('#ffc-container').show('fast', function () {
					$('#FfcIssueDate').datetimepicker({
						timepicker: false,
						format: 'Y/m/d'
					});
				});

			}
			else {
				$('#FfcNumber').val('');
				$('#ffc-container').hide('fast');
				$('#FfcIssueDate').datetimepicker('destroy');
			}
		});

	</script>

}