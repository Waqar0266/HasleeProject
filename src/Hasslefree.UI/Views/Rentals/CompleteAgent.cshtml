@model Hasslefree.Web.Models.Rentals.CompleteRentalAgent

<div class="clearfix"></div>
<div id="content">
	<div class="container">
		<div class="row justify-content-md-center">
			<div class="col col-lg-12 col-xl-12">
				<div class="row">

					<div class="col-md-12 col-lg-12 col-xl-12">
						<div class="page-header bordered">
							<h1>Complete Rental <small>Complete your rental listing</small></h1>
						</div>
                        <form action="/account/rental/a/complete" method="post" id="rental-form">
                            @Html.HiddenFor(m => m.RentalGuid)
                            @Html.HiddenFor(m => m.AgentGuid)
                            @{
                                if (ViewData.ModelState.Any(m => m.Value.Errors.Count > 0))
                                {
                                    <div class="alert alert-danger" role="alert">
                                        @Html.ValidationSummary(false)
                                    </div>
                                }
                            }
                            @Html.AntiForgeryToken()

                            <h3 class="subheadline">Your Information</h3>
                            <div class="form-group">
                                <label for="Name">VAT Registration Number</label>
                                @Html.TextBoxFor(m => m.VatNumber, new { @class = "form-control", @placeholder = "VAT Registration Number" })
                            </div>
                            <div class="form-group">
                                <label for="Surname">Fidelity Fund Certificate Number (FFC)</label>
                                @Html.TextBoxFor(m => m.FfcNumber, new { @class = "form-control", @placeholder = "Fidelity Fund Certificate Number (FFC)" })
                            </div>

                            <h3 class="subheadline">Listing Information</h3>
                            <div class="form-group">
                                <label for="Premises">The Premises</label>
                                @Html.TextBoxFor(m => m.Premises, new { @class = "form-control", @placeholder = "The Premises" })
                            </div>
                            <div class="form-group">
                                <label for="StandErf">Stand/Erf</label>
                                @Html.TextBoxFor(m => m.StandErf, new { @class = "form-control", @placeholder = "Stand/Erf" })
                            </div>
                            <div class="form-group">
                                <label for="Township">Township</label>
                                @Html.TextBoxFor(m => m.Township, new { @class = "form-control", @placeholder = "Township" })
                            </div>
                            <div class="form-group">
                                <label for="Address">Being (street address)</label>
                                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", @placeholder = "Being (street address)" })
                            </div>
                            <h3 class="subheadline">Rental Information</h3>
                            <div class="form-group">
                                <label for="MonthlyRental">Monthly Rental</label>
                                @Html.TextBox("MonthlyRental", String.Format("{0:0.00}", Model.MonthlyRental), new { id = "MonthlyRental", @class = "form-control", @placeholder = "Monthly Rental (R)" })
                            </div>
                            <div class="form-group">
                                <label for="Deposit">Deposit</label>
                                @Html.TextBox("Deposit", String.Format("{0:0.00}", Model.Deposit), new { id = "Deposit", @class = "form-control", @placeholder = "Deposit" })
                            </div>
                            <div class="form-group">
                                <label for="PostalAddress1">Rental Payment Date</label>
                                @Html.TextBoxFor(m => m.RentalPaymentDate, new { @class = "form-control", @placeholder = "Rental Payment Date" })
                            </div>
                            <div class="form-group">
                                <label for="PostalAddress2">Deposit Payment Date</label>
                                @Html.TextBoxFor(m => m.DepositPaymentDate, new { @class = "form-control", @placeholder = "Deposit Payment Date" })
                            </div>

                            @Html.Partial("../Rentals/_Commission", Model)
                            @Html.Partial("../Rentals/_AgentDuties", Model)

                            <h3 class="subheadline">Other Conditions</h3>
                            <div class="form-group">
                                <label for="SpecificRequirements">Specific Requirements</label>
                                @Html.TextAreaFor(m => m.SpecificRequirements, new { @class = "form-control", @placeholder = "Specific Requirements", rows = 7 })
                            </div>
                            <div class="form-group">
                                <label for="SpecialConditions">Special Conditions</label>
                                @Html.TextAreaFor(m => m.SpecialConditions, new { @class = "form-control", @placeholder = "Special Conditions", rows = 7 })
                            </div>

                            <h3 class="subheadline">Witness 1 Details</h3>
                            <div class="form-group">
                                <label for="Name">Name</label>
                                @Html.TextBoxFor(m => m.Witness1Name, new { @class = "form-control", @placeholder = "Name" })
                            </div>
                            <div class="form-group">
                                <label for="Name">Surname</label>
                                @Html.TextBoxFor(m => m.Witness1Surname, new { @class = "form-control", @placeholder = "Surname" })
                            </div>
                            <div class="form-group">
                                <label for="Name">Email</label>
                                @Html.TextBoxFor(m => m.Witness1Email, new { @class = "form-control", @placeholder = "Email" })
                            </div>
                            <div class="form-group">
                                <label for="Name">Mobile</label>
                                @Html.TextBoxFor(m => m.Witness1Mobile, new { @class = "form-control", @placeholder = "Mobile" })
                            </div>

                            <h3 class="subheadline">Witness 2 Details</h3>
                            <div class="form-group">
                                <label for="Name">Name</label>
                                @Html.TextBoxFor(m => m.Witness2Name, new { @class = "form-control", @placeholder = "Name" })
                            </div>
                            <div class="form-group">
                                <label for="Name">Surname</label>
                                @Html.TextBoxFor(m => m.Witness2Surname, new { @class = "form-control", @placeholder = "Surname" })
                            </div>
                            <div class="form-group">
                                <label for="Name">Email</label>
                                @Html.TextBoxFor(m => m.Witness2Email, new { @class = "form-control", @placeholder = "Email" })
                            </div>
                            <div class="form-group">
                                <label for="Name">Mobile</label>
                                @Html.TextBoxFor(m => m.Witness2Mobile, new { @class = "form-control", @placeholder = "Mobile" })
                            </div>
                            <hr>
                            <div class="form-group action">
                                <button type="submit" class="btn btn-lg btn-primary" data-loading-text="<i class='fa fa-spinner fa-spin'></i> Saving...">Continue</button>
                            </div>
                        </form>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section PageScripts{

	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC6QjJKeDXiflZEJug5ldkvAzzrLkZYoAM&libraries=places&callback=initMap" async></script>

	<script type="text/javascript">

		function initMap() {
			const address = document.getElementById("Address");
			const addressOptions = {
				componentRestrictions: { country: "za" },
				types: ["address"]
			};
			const addressAutocomplete = new google.maps.places.Autocomplete(address, addressOptions);
			addressAutocomplete.addListener("place_changed", () => {
				const place = addressAutocomplete.getPlace();
				console.log(place);
				$('#Address').val(place.formatted_address);
			});
		}

		$(document).ready(function () {

			$("#Address").on('focus', function () {
				var r = Math.floor(Math.random() * 100);
				$(this).attr('autocomplete', 'disable-autofill');
			});

			$('#RentalPaymentDate').datetimepicker({
				timepicker: false,
				format: 'Y/m/d',
				value: '@Model.RentalPaymentDate.Value.ToString("yyyy-MM-dd")'
			});

			$('#DepositPaymentDate').datetimepicker({
				timepicker: false,
				format: 'Y/m/d',
				value: '@Model.DepositPaymentDate.Value.ToString("yyyy-MM-dd")'
			});

			$('[name="DepositProcurement"]').on('change', function () {

				var value = $(this).val();
				$('#ProcureDepositOther').val('');
				if (value == 'Landlord' || value == 'PreviousRentalAgent') {
					$('#procure-deposit-other-specify').hide('fast');
				}
				else {
					$('#procure-deposit-other-specify').show('fast');
				}
			});

		})

		$('#rental-form').on('submit', function () {

			if (!Hasslefree.Functions.Validate(this)) return false;

			$('#rental-form').append('<input type="hidden" name="Procurement" value="' + $('#procurement').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="Management" value="' + $('#management').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="Negotiating" value="' + $('#negotiating').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="Informing" value="' + $('#informing').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="IncomingSnaglist" value="' + $('#incoming-snaglist').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="OutgoingSnaglist" value="' + $('#outgoing-snaglist').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="Explaining" value="' + $('#explaining').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="PayingLandlord" value="' + $('#paying-landlord').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="InstructingAttorneys" value="' + $('#instruct-landlord').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="ContactLandlord" value="' + $('#contact-landlord').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="ProvideLandlord" value="' + $('#provide-landlord').is(':checked') + '" />');
			$('#rental-form').append('<input type="hidden" name="AskLandlordConsent" value="' + $('#ask-landlord-consent').is(':checked') + '" />');

			$('#rental-form').append('<input type="hidden" name="ProcureDepositLandlord" value="' + ($('[name="DepositProcurement"]:checked').val() == 'Landlord') + '" />');
			$('#rental-form').append('<input type="hidden" name="ProcureDepositPreviousRentalAgent" value="' + ($('[name="DepositProcurement"]:checked').val() == 'PreviousRentalAgent') + '" />');

			$('#rental-form').append('<input type="hidden" name="TransferDeposit" value="' + $('#transfer-deposit').is(':checked') + '" />');

		});

		$('#Race').on('change', function () {
			var selected = $(this).val();
			if (selected == 'Other') {
				$('#race-other').val('');
				$('#race-other-container').show('fast');
				$('#Race').removeAttr('name');
				$('#race-other').attr('name', 'Race');
			}
			else {
				$('#race-other').val('');
				$('#race-other-container').hide('fast');
				$('#race-other').removeAttr('name');
				$('#Race').attr('name', 'Race');
			}
		});

		$('#nationality').on('change', function () {
			var checked = $(this).is(':checked');
			if (!checked) {
				$('#nationality-other').val('');
				$('#nationality-other-container').show('fast');
			}
			else {
				$('#nationality-other').val('South African');
				$('#nationality-other-container').hide('fast');
			}
		});

		$('#ffc').on('change', function () {
			var checked = $(this).is(':checked');
			if (checked) {
				$('#FfcNumber').val('');
				$('#ffc-container').show('fast', function () {
					$('#FfcIssueDate').datetimepicker({
						timepicker: false,
						format: 'Y/m/d'
					});
				});

			}
			else {
				$('#FfcNumber').val('');
				$('#ffc-container').hide('fast');
				$('#FfcIssueDate').datetimepicker('destroy');
			}
		});

	</script>

}