@model Hasslefree.Web.Models.Agents.CompleteAgent

<div class="clearfix"></div>
<div id="content">
	<div class="container">
		<div class="row justify-content-md-center">
			<div class="col col-lg-12 col-xl-12">
				<div class="row">

					<div class="col-md-12 col-lg-12 col-xl-12">
						<div class="page-header bordered">
							<h1>Complete Application <small>Complete your agent profile</small></h1>
						</div>
						<form action="/account/agent/complete-registration" method="post" id="agent-form">
							@Html.HiddenFor(m => m.AgentId)
							@Html.HiddenFor(m => m.AgentGuid)
							@Html.HiddenFor(m => m.AgentStatus)
							@{
								if (ViewData.ModelState.Any(m => m.Value.Errors.Count > 0))
								{
									<div class="alert alert-danger" role="alert">
										@Html.ValidationSummary(false)
									</div>
								}
							}
							@Html.AntiForgeryToken()

							<h3 class="subheadline">Basic Information</h3>
							<div class="form-group">
								<label for="Gender">Gender</label>
								<select name="Gender" id="Gender" class="form-control">
									@foreach (var gender in ViewBag.Genders)
									{
										<option value="@gender" @(gender == Model.Gender.ToString() ? "selected" : "")>@gender</option>
									}
								</select>
							</div>
							<div class="form-group">
								<label for="Title">Title</label>
								<select name="Title" id="Title" class="form-control">
									@foreach (var title in ViewBag.Titles)
									{
										<option value="@title" @(title == Model.Title ? "selected" : "")>@title</option>
									}
								</select>
							</div>
							<div class="form-group">
								<label for="Name">Name</label>
								@Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Name" })
							</div>
							<div class="form-group">
								<label for="Surname">Surname</label>
								@Html.TextBoxFor(m => m.Surname, new { @class = "form-control", @placeholder = "Surname" })
							</div>
							<div class="form-group">
								<label for="Race">Race</label>
								@Html.DropDownListFor(m => m.Race, new SelectList(ViewBag.Races), new { @class = "form-control", placeholder = "Race" })
								<div id="race-other-container" style="display:none;">
									<input class="form-control" id="race-other" placeholder="Specify Race" type="text" value="" />
								</div>
							</div>
							<div class="form-group">
								<label for="IdNumber">ID Number</label>
								@Html.TextBoxFor(m => m.IdNumber, new { @class = "form-control", @placeholder = "ID Number" })
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="nationality" checked>
									<label for="nationality">Are you South African?</label>
								</div>
								<div id="nationality-other-container" style="display:none;">
									<input class="form-control" id="nationality-other" name="Nationality" placeholder="Specify Nationality" type="text" value="South African" />
								</div>
							</div>
							<div class="form-group">
								<label for="Mobile">Cellphone Number</label>
								@Html.TextBoxFor(m => m.Mobile, new { @class = "form-control", @placeholder = "Cellphone Number" })
							</div>
							<div class="form-group">
								<label for="Phone">Telephone Number</label>
								@Html.TextBoxFor(m => m.Phone, new { @class = "form-control", @placeholder = "Telephone Number" })
							</div>
							<div class="form-group">
								<label for="Fax">Fax Number</label>
								@Html.TextBoxFor(m => m.Fax, new { @class = "form-control", @placeholder = "Fax Number" })
							</div>
							<h3 class="subheadline">Login Information</h3>
							<div class="form-group">
								<label for="Email">Email</label>
								@Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
							</div>
							<div class="form-group">
								<label for="Password">Password</label>
								@Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
							</div>
							<div class="form-group">
								<label for="ConfirmPassword">Confirm Password</label>
								@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password" })
							</div>

							<h3 class="subheadline">Residential Address</h3>
							<div class="form-group">
								<label for="ResidentialAddress1">Residential Address 1</label>
								@Html.TextBoxFor(m => m.ResidentialAddress1, new { @class = "form-control", @placeholder = "Residential Address 1", google_address = "true" })
							</div>
							<div class="form-group">
								<label for="ResidentialAddress2">Residential Address 2</label>
								@Html.TextBoxFor(m => m.ResidentialAddress2, new { @class = "form-control", @placeholder = "Residential Address 2" })
							</div>
							<div class="form-group">
								<label for="ResidentialAddress3">Residential Address Suburb</label>
								@Html.TextBoxFor(m => m.ResidentialAddress3, new { @class = "form-control", @placeholder = "Residential Address Suburb" })
							</div>
							<div class="form-group">
								<label for="ResidentialAddressTown">Residential Address City</label>
								@Html.TextBoxFor(m => m.ResidentialAddressTown, new { @class = "form-control", @placeholder = "Residential Address City" })
							</div>
							<div class="form-group">
								<label for="ResidentialAddressProvince">Residential Address Province</label>
								@Html.DropDownListFor(m => m.ResidentialAddressProvince, new SelectList(ViewBag.Provinces), new { @class = "form-control", placeholder = "Province" })
							</div>
							<div class="form-group">
								<label for="ResidentialAddressCountry">Residential Address Country</label>
								@Html.DropDownListFor(m => m.ResidentialAddressCountry, new SelectList(ViewBag.Countries), new { @class = "form-control", placeholder = "Residential Address Country" })
							</div>
							<div class="form-group">
								<label for="ResidentialAddressCode">Residential Address Code</label>
								@Html.TextBoxFor(m => m.ResidentialAddressCode, new { @class = "form-control", @placeholder = "Residential Address Code" })
							</div>
							<h3 class="subheadline">Postal Address</h3>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="same">
									<label for="same">Is postal address the same as residential address?</label>
								</div>
							</div>
							<div id="postal-address-container">
								<div class="form-group">
									<label for="PostalAddress1">Postal Address 1</label>
									@Html.TextBoxFor(m => m.PostalAddress1, new { @class = "form-control", @placeholder = "Postal Address 1" })
								</div>
								<div class="form-group">
									<label for="PostalAddress2">Postal Address 2</label>
									@Html.TextBoxFor(m => m.PostalAddress2, new { @class = "form-control", @placeholder = "Postal Address 2" })
								</div>
								<div class="form-group">
									<label for="PostalAddress3">Postal Address Suburb</label>
									@Html.TextBoxFor(m => m.PostalAddress3, new { @class = "form-control", @placeholder = "Postal Address Suburb" })
								</div>
								<div class="form-group">
									<label for="PostalAddressTown">Postal Address City</label>
									@Html.TextBoxFor(m => m.PostalAddressTown, new { @class = "form-control", @placeholder = "Postal Address City" })
								</div>
								<div class="form-group">
									<label for="ResidentialAddressProvince">Residential Address Province</label>
									@Html.DropDownListFor(m => m.PostalAddressProvince, new SelectList(ViewBag.Provinces), new { @class = "form-control", placeholder = "Province" })
								</div>
								<div class="form-group">
									<label for="PostalAddressCountry">Postal Address Country</label>
									@Html.DropDownListFor(m => m.PostalAddressCountry, new SelectList(ViewBag.Countries), new { @class = "form-control", placeholder = "Postal Address Country" })
								</div>
								<div class="form-group">
									<label for="PostalAddressCode">Postal Address Code</label>
									@Html.TextBoxFor(m => m.PostalAddressCode, new { @class = "form-control", @placeholder = "Postal Address Code" })
								</div>
							</div>
							<h3 class="subheadline">Agent Details</h3>
							<div class="form-group">
								<label for="PreviousEmployer">Previous Employer</label>
								@Html.TextBoxFor(m => m.PreviousEmployer, new { @class = "form-control", @placeholder = "Previous Employer" })
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="ffc">
									<label for="ffc">Were you issued with a Fidelity Fund Certificate as an Estate Agent under this firm?</label>
								</div>
							</div>
							<div id="ffc-container" style="display:none;">
								<div class="form-group">
									<label for="FfcNumber">FFC Number</label>
									@Html.TextBoxFor(m => m.FfcNumber, new { @class = "form-control", @placeholder = "FFC Number" })
								</div>
								<div class="form-group">
									<label for="FfcIssueDate">FFC Issue Date (yyyy/mm/dd)</label>
									@Html.TextBoxFor(m => m.FfcIssueDate, new { @class = "form-control", @placeholder = "FFC Issue Date (yyyy/mm/dd)" })
								</div>
							</div>
							<div class="form-group">
								<label for="EaabReference">Seven Digit EAAB Reference Number</label>
								@Html.TextBoxFor(m => m.EaabReference, new { @class = "form-control", @placeholder = "Seven Digit EAAB Reference Number" })
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="dismissed" />
									<label for="dismissed">Have you been dismissed from a position of trust due to improper conduct?</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="convicted" />
									<label for="convicted">Have you been convicted of an offence involving an element of dishonesty?</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="insolvent" />
									<label for="insolvent">Were/are you insolvent and not yet rehabilitated? (attach insolvency and rehabilitation documentations)</label>
								</div>
							</div>
							<div class="form-group">
								<div class="checkbox">
									<input type="checkbox" id="withdrawn" />
									<label for="withdrawn">Was your Fidelity Fund Certificate ever been withdrawn?</label>
								</div>
							</div>
							<hr>
							<div class="form-group action">
								<button type="submit" class="btn btn-lg btn-primary" data-loading-text="<i class='fa fa-spinner fa-spin'></i> Saving...">Continue</button>
							</div>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section PageScripts{

	<script type="text/javascript">

		$('#same').on('change', function () {

			if ($(this).is(':checked')) {
				$('#postal-address-container').hide('fast');
				$('#PostalAddress1').val($('#ResidentialAddress1').val());
				$('#PostalAddress2').val($('#ResidentialAddress2').val());
				$('#PostalAddress3').val($('#ResidentialAddress3').val());
				$('#PostalAddressTown').val($('#ResidentialAddressTown').val());
				$('#PostalAddressRegion').val($('#ResidentialAddressRegion').val());
				$('#PostalAddressCountry').val($('#ResidentialAddressCountry').val());
				$('#PostalAddressCode').val($('#ResidentialAddressCode').val());
			}
			else {
				$('#postal-address-container').show('fast');
				$('#PostalAddress1').val('');
				$('#PostalAddress2').val('');
				$('#PostalAddress3').val('');
				$('#PostalAddressTown').val('');
				$('#PostalAddressRegion').val('');
				$('#PostalAddressCountry').val('');
				$('#PostalAddressCode').val('');
			}

		})

		$('#agent-form').on('submit', function () {

			if (!Hasslefree.Functions.Validate(this)) return false;

			$('#agent-form').append('<input type="hidden" name="Dismissed" value="' + $('#dismissed').is(':checked') + '" />');
			$('#agent-form').append('<input type="hidden" name="Convicted" value="' + $('#convicted').is(':checked') + '" />');
			$('#agent-form').append('<input type="hidden" name="Insolvent" value="' + $('#insolvent').is(':checked') + '" />');
			$('#agent-form').append('<input type="hidden" name="Withdrawn" value="' + $('#withdrawn').is(':checked') + '" />');

		});

		$('#Race').on('change', function () {
			var selected = $(this).val();
			if (selected == 'Other') {
				$('#race-other').val('');
				$('#race-other-container').show('fast');
				$('#Race').removeAttr('name');
				$('#race-other').attr('name', 'Race');
			}
			else {
				$('#race-other').val('');
				$('#race-other-container').hide('fast');
				$('#race-other').removeAttr('name');
				$('#Race').attr('name', 'Race');
			}
		});

		$('#nationality').on('change', function () {
			var checked = $(this).is(':checked');
			if (!checked) {
				$('#nationality-other').val('');
				$('#nationality-other-container').show('fast');
			}
			else {
				$('#nationality-other').val('South African');
				$('#nationality-other-container').hide('fast');
			}
		});

		$('#ffc').on('change', function () {
			var checked = $(this).is(':checked');
			if (checked) {
				$('#FfcNumber').val('');
				$('#ffc-container').show('fast', function () {
					$('#FfcIssueDate').datetimepicker({
						timepicker: false,
						format: 'Y/m/d'
					});
				});

			}
			else {
				$('#FfcNumber').val('');
				$('#ffc-container').hide('fast');
				$('#FfcIssueDate').datetimepicker('destroy');
			}
		});

	</script>

}